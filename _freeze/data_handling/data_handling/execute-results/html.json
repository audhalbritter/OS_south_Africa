{
  "hash": "e9eb3fb5b340afa4edcce4f2d35ef5a2",
  "result": {
    "markdown": "---\ntitle: \"Data handling and curation - from raw to clean data\"\nauthor: \"Aud Halbritter (adapted from Matt Grainger)\"\nformat: \n  revealjs:\n    embed-resources: true\n    theme: moon\n    slide-number: true\n    show-slide-number: all\n    \neditor: visual\n---\n\n::: {.cell}\n\n:::\n\n\n## {}\n\n![](pics/Ecology_data.jfif)\n\n## Data cycle\n\n![](pics/data_cycle.png)\n\n## Data handling and curation is time consuming\n\n![](pics/time_spent.png){width=300}\n\n## Data cleaning vs Data wrangling\n\n***Data cleaning*** is the process of removing incorrect, duplicate, typos, or otherwise erroneous data from a dataset\n\n***Data wrangling*** changing the format to make it more useful for your analysis\n\n\n## \n\n### Import data with read_delim\n\nSee [Import data](https://biostats-r.github.io/biostats/workingInR/005_Importing_Data_in_R.html) BioST@TS tutorial\n\n\n::: {.cell}\n\n```{.r .cell-code}\nread_delim(file = \"data/plant_community_2024.csv\")\n```\n:::\n\n\n\n\n## \n\n### Data cleaning with the Palmer penguins dataset\n\n![](pics/lter_penguins.png){width=120}\n\n## \n\n::: callout-note\n### Exercise\nRun the following commands to install the palmerpenguins package.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"palmerpenguins\")\nlibrary(palmerpenguins)\nhead(penguins_raw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 17\n  studyName `Sample Number` Species          Region Island Stage `Individual ID`\n  <chr>               <dbl> <chr>            <chr>  <chr>  <chr> <chr>          \n1 PAL0708                 1 Adelie Penguin … Anvers Torge… Adul… N1A1           \n2 PAL0708                 2 Adelie Penguin … Anvers Torge… Adul… N1A2           \n3 PAL0708                 3 Adelie Penguin … Anvers Torge… Adul… N2A1           \n4 PAL0708                 4 Adelie Penguin … Anvers Torge… Adul… N2A2           \n5 PAL0708                 5 Adelie Penguin … Anvers Torge… Adul… N3A1           \n6 PAL0708                 6 Adelie Penguin … Anvers Torge… Adul… N3A2           \n# ℹ 10 more variables: `Clutch Completion` <chr>, `Date Egg` <date>,\n#   `Culmen Length (mm)` <dbl>, `Culmen Depth (mm)` <dbl>,\n#   `Flipper Length (mm)` <dbl>, `Body Mass (g)` <dbl>, Sex <chr>,\n#   `Delta 15 N (o/oo)` <dbl>, `Delta 13 C (o/oo)` <dbl>, Comments <chr>\n```\n:::\n:::\n\n\n\n## \n\n### Clean names with janitor\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_raw |> \n  names() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"studyName\"           \"Sample Number\"       \"Species\"            \n [4] \"Region\"              \"Island\"              \"Stage\"              \n [7] \"Individual ID\"       \"Clutch Completion\"   \"Date Egg\"           \n[10] \"Culmen Length (mm)\"  \"Culmen Depth (mm)\"   \"Flipper Length (mm)\"\n[13] \"Body Mass (g)\"       \"Sex\"                 \"Delta 15 N (o/oo)\"  \n[16] \"Delta 13 C (o/oo)\"   \"Comments\"           \n```\n:::\n:::\n\n\n## \n\n### Clean names with janitor\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_raw |> \n  names() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"studyName\"           \"Sample Number\"       \"Species\"            \n [4] \"Region\"              \"Island\"              \"Stage\"              \n [7] \"Individual ID\"       \"Clutch Completion\"   \"Date Egg\"           \n[10] \"Culmen Length (mm)\"  \"Culmen Depth (mm)\"   \"Flipper Length (mm)\"\n[13] \"Body Mass (g)\"       \"Sex\"                 \"Delta 15 N (o/oo)\"  \n[16] \"Delta 13 C (o/oo)\"   \"Comments\"           \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_clean <- penguins_raw |> \n  janitor::clean_names(case = \"snake\") \n\npenguins_clean |> \n  names()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"study_name\"        \"sample_number\"     \"species\"          \n [4] \"region\"            \"island\"            \"stage\"            \n [7] \"individual_id\"     \"clutch_completion\" \"date_egg\"         \n[10] \"culmen_length_mm\"  \"culmen_depth_mm\"   \"flipper_length_mm\"\n[13] \"body_mass_g\"       \"sex\"               \"delta_15_n_o_oo\"  \n[16] \"delta_13_c_o_oo\"   \"comments\"         \n```\n:::\n:::\n\n\n## \n\n### Get a glimps wiht dplyr\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_clean |>\n  dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 344\nColumns: 17\n$ study_name        <chr> \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL0708\", \"PAL0708…\n$ sample_number     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ species           <chr> \"Adelie Penguin (Pygoscelis adeliae)\", \"Adelie Pengu…\n$ region            <chr> \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\", \"Anvers\", \"A…\n$ island            <chr> \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", …\n$ stage             <chr> \"Adult, 1 Egg Stage\", \"Adult, 1 Egg Stage\", \"Adult, …\n$ individual_id     <chr> \"N1A1\", \"N1A2\", \"N2A1\", \"N2A2\", \"N3A1\", \"N3A2\", \"N4A…\n$ clutch_completion <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"No\", \"No\"…\n$ date_egg          <date> 2007-11-11, 2007-11-11, 2007-11-16, 2007-11-16, 200…\n$ culmen_length_mm  <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ culmen_depth_mm   <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <dbl> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <dbl> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <chr> \"MALE\", \"FEMALE\", \"FEMALE\", NA, \"FEMALE\", \"MALE\", \"F…\n$ delta_15_n_o_oo   <dbl> NA, 8.94956, 8.36821, NA, 8.76651, 8.66496, 9.18718,…\n$ delta_13_c_o_oo   <dbl> NA, -24.69454, -25.33302, NA, -25.32426, -25.29805, …\n$ comments          <chr> \"Not enough blood for isotopes.\", NA, NA, \"Adult not…\n```\n:::\n:::\n\n\n##\n\n### Skim your data with skimr\n\n\n::: {.cell}\n\n```{.r .cell-code}\nout <- penguins_clean |> \n  skimr::skim() \n\nout\n```\n\n::: {.cell-output-display}\nTable: Data summary\n\n|                         |               |\n|:------------------------|:--------------|\n|Name                     |penguins_clean |\n|Number of rows           |344            |\n|Number of columns        |17             |\n|_______________________  |               |\n|Column type frequency:   |               |\n|character                |9              |\n|Date                     |1              |\n|numeric                  |7              |\n|________________________ |               |\n|Group variables          |None           |\n\n\n**Variable type: character**\n\n|skim_variable     | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|study_name        |         0|          1.00|   7|   7|     0|        3|          0|\n|species           |         0|          1.00|  33|  41|     0|        3|          0|\n|region            |         0|          1.00|   6|   6|     0|        1|          0|\n|island            |         0|          1.00|   5|   9|     0|        3|          0|\n|stage             |         0|          1.00|  18|  18|     0|        1|          0|\n|individual_id     |         0|          1.00|   4|   6|     0|      190|          0|\n|clutch_completion |         0|          1.00|   2|   3|     0|        2|          0|\n|sex               |        11|          0.97|   4|   6|     0|        2|          0|\n|comments          |       290|          0.16|  18|  68|     0|       10|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|date_egg      |         0|             1|2007-11-09 |2009-12-01 |2008-11-09 |       50|\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|    mean|     sd|      p0|     p25|     p50|     p75|    p100|hist  |\n|:-----------------|---------:|-------------:|-------:|------:|-------:|-------:|-------:|-------:|-------:|:-----|\n|sample_number     |         0|          1.00|   63.15|  40.43|    1.00|   29.00|   58.00|   95.25|  152.00|▇▇▆▅▃ |\n|culmen_length_mm  |         2|          0.99|   43.92|   5.46|   32.10|   39.23|   44.45|   48.50|   59.60|▃▇▇▆▁ |\n|culmen_depth_mm   |         2|          0.99|   17.15|   1.97|   13.10|   15.60|   17.30|   18.70|   21.50|▅▅▇▇▂ |\n|flipper_length_mm |         2|          0.99|  200.92|  14.06|  172.00|  190.00|  197.00|  213.00|  231.00|▂▇▃▅▂ |\n|body_mass_g       |         2|          0.99| 4201.75| 801.95| 2700.00| 3550.00| 4050.00| 4750.00| 6300.00|▃▇▆▃▂ |\n|delta_15_n_o_oo   |        14|          0.96|    8.73|   0.55|    7.63|    8.30|    8.65|    9.17|   10.03|▃▇▆▅▂ |\n|delta_13_c_o_oo   |        13|          0.96|  -25.69|   0.79|  -27.02|  -26.32|  -25.83|  -25.06|  -23.79|▆▇▅▅▂ |\n:::\n:::\n\n\n\n## \n\n::: callout-note\n### Exercise\nRun the following functions:\n\n`clean_names()`\n\n`glimpse()`\n\n`skimr::skim()`\n:::\n\n\n## \n\n### Data validation\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(validate)\n\nrules <- validator(culm = culmen_length_mm >= 0, \n                   body = body_mass_g > 3000,\n                   species = is.character(species),\n                   sex = sex %in% c(\"FEMALES\", \"MALE\"))\n```\n:::\n\n\n\n## \n\n### Data validation\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nout   <- confront(penguins_clean, rules)\nsummary(out)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     name items passes fails nNA error warning                     expression\n1    culm   344    342     0   2 FALSE   FALSE culmen_length_mm - 0 >= -1e-08\n2    body   344    331    11   2 FALSE   FALSE             body_mass_g > 3000\n3 species     1      1     0   0 FALSE   FALSE          is.character(species)\n4     sex   344    168   165  11 FALSE   FALSE sex %vin% c(\"FEMALES\", \"MALE\")\n```\n:::\n:::\n\n\n## \n\n### Data validation\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nplot(out)\n```\n\n::: {.cell-output-display}\n![](data_handling_files/figure-revealjs/validation-plot-1.png){width=960}\n:::\n:::\n\n\n\n## Rules for data cleaning\n\n- Deposit and back-up raw data files \n- Do not manually manipulate the raw data files\n- Clean data using code\n- Check the cleaning code\n\n\n## \n\n### Keep track of changes with tidylog\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidylog)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- penguins_clean |> \n  tidylog::select(study_name, species, island, individual_id, body_mass_g) |> \n  tidylog::filter(species %in% c(\"Adelie Penguin (Pygoscelis adeliae)\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nselect: dropped 12 variables (sample_number, region, stage, clutch_completion, date_egg, …)\nfilter: removed 192 rows (56%), 152 rows remaining\n```\n:::\n:::\n\n\n\n\n##\n\n### Remove duplicates with dplyr\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  Day       Person\n  <chr>     <chr> \n1 Monday    Becks \n2 Tuesday   Amy   \n3 Wednesday Matt  \n4 Wednesday Matt  \n```\n:::\n:::\n\n\n##\n\n### Remove duplicates with dplyr\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate_data |> \n  tidylog::distinct()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ndistinct: removed one row (25%), 3 rows remaining\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Day       Person\n  <chr>     <chr> \n1 Monday    Becks \n2 Tuesday   Amy   \n3 Wednesday Matt  \n```\n:::\n:::\n\n\n\n## Missing data\n\nMissing data is often a problem, e.g. for running a model. Typically as ecologists we sweep missing data under the carpet by using a \"complete case\" approach to data analysis.\n\n![](pics/SWEEP-IT-UNDER-THE-CARPET-BANKSY-2.jpg)\n\n\n## \n\nIf you have ever written some code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnewdf <- na.omit(penguins_clean)\n\nnewdf <- penguins_clean[complete.cases(penguins_clean), ]\n\nnewdf <- penguins_clean |>\n  tidyr::drop_na()\n```\n:::\n\n\nyou are removing missing data (NAs) from your dataset.\n\n## \n\n### Why is this a problem?\n\nBy throwing away potentially useful data (only including those rows without a NA in them) you reduce the information you are working with, reduce statistical power and introduce selection bias (invalidating any assumption of randomisation).\n\n\n## \n\n### Vizualise missing data with naniar\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins_messy |> \n  naniar::vis_miss()\n```\n\n::: {.cell-output-display}\n![](data_handling_files/figure-revealjs/naniar-1.png){width=960}\n:::\n:::\n\n\n\n## \n\n### Different types of missingness\n\nData can be missing random or systematically.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(naniar)\npenguins_messy |> \n  ggplot(aes(x = bill_length_mm, y = body_mass_g)) +\n  geom_miss_point()\n```\n\n::: {.cell-output-display}\n![](data_handling_files/figure-revealjs/naniar-viz-1.png){width=960}\n:::\n:::\n\n\n\n\n\n## \n\n### Data wrangling with dplyr\n\n![](pics/Dplyr_1.jpg)\n\n## \n\n### Data wrangling with dplyr\n\n![](pics/Dplyr_2.jpg)\n\n##\n\n### Data wrangling with tidyr\n\n![](pics/Dplyr_3.jpg)\n\n## \n\n::: callout-note\n### Exercise\nUse the penguins dataset to:\n\n- Select the columns species, island and body_mass_g\n- Filter for the species Adelie and the island Biscoe and Dream\n\n- Convert the penguin body mass from gram to kilogram\n- Calculate the mean bill length and standard error for each penguin species\n- Make a wide dataset showing the body mass for each penguin species in a separate column. And turn it back to a long dataframe.\n\nImport the *messy_data.RDS* data file and clean it.\n\n:::\n\n\n## Reproducible workflows\n\n![](pics/non-rep.png)\n\n## Reproducible workflows\n\n![](pics/quarto_workflow2.png)\n\n\n",
    "supporting": [
      "data_handling_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}